{"version":3,"sources":["logo.svg","Weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["Weather","useState","state","setstate","getinfo","setgetInfo","date","Date","getCurrLocation","a","url","fetch","result","json","console","log","cod","main","feels","feels_like","humidity","pressure","temp","max","temp_max","min","temp_min","weather","description","wind","speed","city","name","toLocaleString","weekday","day","year","month","hour","minute","second","useEffect","className","src","type","placeholder","onChange","e","target","value","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f97d897c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\"\r\n\r\nfunction Weather() {\r\n    const [state, setstate] = useState(\"delhi\");\r\n    const [getinfo, setgetInfo] = useState({});\r\n    let date = new Date();\r\n    date = date.toLocaleString('en-US', {\r\n        weekday: 'short', // long, short, narrow\r\n        day: 'numeric', // numeric, 2-digit\r\n        year: 'numeric', // numeric, 2-digit\r\n        month: 'long', // numeric, 2-digit, long, short, narrow\r\n        hour: 'numeric', // numeric, 2-digit\r\n        minute: 'numeric', // numeric, 2-digit\r\n        second: 'numeric', // numeric, 2-digit\r\n    });\r\n\r\n    useEffect(async () => {\r\n\r\n        getCurrLocation();\r\n    }, [])\r\n\r\n    function getlocation() {\r\n        getCurrLocation();\r\n    }\r\n\r\n    async function getCurrLocation() {\r\n        let url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + state + \"&units=metric&appid=fbe9e2c58aafed4b19936c8e90659c3e\";\r\n        let result = await fetch(url);\r\n        result = await result.json();\r\n        console.log(result);\r\n        if (result.cod !== '404') {\r\n            const { feels_like: feels, humidity, pressure, temp, temp_max: max, temp_min: min } = result.main;\r\n            const { main, description } = result.weather[0];\r\n\r\n            const { speed: wind } = result.wind;\r\n            const { name: city } = result;\r\n            const info = {\r\n                feels, humidity, pressure, temp, max, min, main, description, wind, city\r\n            }\r\n            //console.log(city);\r\n            setgetInfo(info);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // setInterval((e)=>{\r\n    //     getCurrLocation()\r\n    // },2000);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid px-1 px-sm-3 py-5 mx-auto\">\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"row card0\">\r\n\r\n\r\n                        <div className=\"card1 col-lg-8 col-md-7\"> <h1>{getinfo.description}</h1>\r\n                            <div className=\"text-center\"> <img className=\"image mt-5\" src=\"https://i.imgur.com/M8VyA2h.png\" /> </div>\r\n                            <div className=\"row px-3 mt-3 mb-3\">\r\n                                <h1 className=\"large-font mr-3\">{getinfo.temp}&#176;c</h1>\r\n                                <div className=\"d-flex flex-column mr-3\">\r\n                                    <h2 className=\"mt-3 mb-0\">{getinfo.city}</h2> <small>{date}</small>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column text-center\">\r\n                                    <h3 className=\"fa fa-sun-o mt-4\"></h3> <small>{getinfo.main}</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card2 col-lg-4 col-md-5\">\r\n                            <div className=\"row px-3\"> <input type=\"text\" name=\"location\" placeholder=\"Another location\" className=\"mb-5\" onChange={(e) => setstate(e.target.value)} />\r\n                                <div className=\"fa fa-search mb-5 mr-0 text-center\" onClick={(e) => getlocation()}></div>\r\n                            </div>\r\n                            <div className=\"mr-5\">\r\n\r\n                                <div className=\"line my-5\"></div>\r\n                                <p>Weather Details</p>\r\n                                <div className=\"row px-3\">\r\n                                    <p className=\"light-text\">Cloudy</p>\r\n                                    <p className=\"ml-auto\">12%</p>\r\n                                </div>\r\n                                <div className=\"row px-3\">\r\n                                    <p className=\"light-text\">Humidity</p>\r\n                                    <p className=\"ml-auto\">{getinfo.humidity}%</p>\r\n                                </div>\r\n                                <div className=\"row px-3\">\r\n                                    <p className=\"light-text\">Wind</p>\r\n                                    <p className=\"ml-auto\">{getinfo.wind}km/h</p>\r\n                                </div>\r\n                                <div className=\"row px-3\">\r\n                                    <p className=\"light-text\">Feels Like</p>\r\n                                    <p className=\"ml-auto\">{getinfo.feels}&#176;c</p>\r\n                                </div>\r\n                                <div className=\"row px-3\">\r\n                                    <p className=\"light-text\">Min</p>\r\n                                    <p className=\"ml-auto\">{getinfo.min}&#176;c</p>\r\n                                </div>\r\n                                <div className=\"row px-3\">\r\n                                    <p className=\"light-text\">Max</p>\r\n                                    <p className=\"ml-auto\">{getinfo.max}&#176;c</p>\r\n                                </div>\r\n                                <div className=\"line mt-3\"></div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;","import logo from './logo.svg';\nimport './App.css';\nimport Weather from './Weather'\n\nfunction App() {\n  return (\n   <>\n  <Weather />\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}